<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Admin Portal | From</title>

    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/bootstrap-switch.css">
    <link rel="stylesheet" href="/css/backend/backend.css">
    <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">
    <style>
      .fa-trash-alt, .fa-plus-square, .fa-external-link {
        cursor: pointer;
      }

      #manager .fa-plus-square, #manager .right-corner {
        display: none;
      }

      .fa-trash-alt {
        background: #CA2525;
        border-radius: 3px;
        color: #F3D2D2;
        font-size: 12pt;
        padding: 3px 6px;
        display: none;
      }

      .fa-plus-square {
        color: #428bca;
      }

      .fa-plus-square:hover {
        color: #3276b1
      }

      .fa-trash-alt:hover {
        background: #9D1515;
      }

      .fa-external-link {
        color: #428bca;
        padding-left: 25px;
      }

      .fa-external-link:hover {
        color: #3276b1;
      }

      .right-corner {
        position: absolute;
        top: 15px;
        right: 15px;
      }

      .fa-trash-alt.large {
        padding: 5px 8px;
        font-size: 16pt;
        float: right;
        display: none;
      }

      .edit {
        -webkit-transition: border-color 1s; /* Safari */
        transition: border-color 1s;
        border: 1px solid #FFF;
      }

      .edit-border {
        border-color: #428bca !important;
      }

      hr.middle-fade {
        border: 0;
        height: 1px;
        background: #999;
        background-image: linear-gradient(to right, #ccc, #999, #ccc);
      }

      #dropzone {
        position: relative;
        height: 27vw;
        background: white;
        border: 1px solid #ddd;
        border-radius: 4px;
      }

      #dropzone .dz-preview {
        visibility: hidden;
        display: none;
      }

      #dropzone .dz-message {
        font-size: 4vw;
        padding-top: 15vw;
        text-align: center;

        background-color: #AAA;
        opacity: 0.6;
        color: transparent;
        text-shadow: 0px 2px 3px rgba(255,255,255,0.5);
        -webkit-background-clip: text;
            -moz-background-clip: text;
                 background-clip: text;

       -webkit-transition: background-color 0.6s; /* Safari */
       transition: background-color 0.6s;
      }

      #dropzone.dz-drag-hover .dz-message {
        background-color: #777 !important;
      }

      #dropzone::before {
        padding-top: 2vw;
        margin: auto;
        text-align: center;
        font-size: 9vw;
        position: absolute;
        z-index: 10;
        top: 15px;
        left: 15px;
        right: 15px;
        bottom: 15px;
        border-radius: 4px;
        border: 8px dashed #CCC;
        content: " ";
        opacity: 0.6;
        -webkit-transition: background-color 0.6s, border-color 0.6s; /* Safari */
        transition: background-color 0.6s, border-color 0.6s;
      }

      #dropzone.dz-drag-hover::before {
        border-color: #AAA !important;
      }

      #dropzone .icon {
        font-size: 10vw;
        padding-top: 2vw;
        text-align: center;
        position: absolute;
        z-index: 10;
        top: 15px;
        left: 15px;
        right: 15px;
        bottom: 15px;
      }

      #dropzone .icon i {
        background-color: #AAA;
        opacity: 0.6;
        color: transparent;
        text-shadow: 0px 2px 3px rgba(255,255,255,0.5);
        -webkit-background-clip: text;
        -moz-background-clip: text;
        background-clip: text;

        -webkit-transition: display 1s, background-color 0.6s; /* Safari */
        transition: display 1s, background-color 0.6s;
      }

      #dropzone.dz-drag-hover .icon i {
        background-color: #777 !important;
      }

      #dropzone #disabled {
        font-size: 7vw !important;
        padding-top: 1.5vw !important;
      }

      #dropzone #disabled i, #dropzone #loader i {
        display: none;
      }

      #dropzone.dropped #ready i {
        display: none !important;
      }

      .jumbotron {
        position: relative;
        width: 75%;
        margin: 15px auto;
        padding-bottom: 90px;
        border-radius: 4px;
      }

      .dropdown {
        font-size: 14pt;
        float: right;
        margin-right: 10px;
        height: 30.8px;
      }

      .dropdown button.dropdown-toggle {
        padding: 4.4px 12px;
      }

      .fa-chevron-down {
        position: relative;
        top: -4px;
        float: right;
        padding: 5px;
        border-radius: 0px 4px 4px 0px;
        background: #428bca;
        color: white;
      }

      .open {
        border-bottom-left-radius: 0px !important;
      }

      .link {
        cursor: pointer;
        -webkit-user-select: none; /* Chrome/Safari */
        -moz-user-select: none; /* Firefox */
        -ms-user-select: none; /* IE10+ */

        /* Rules below not implemented in browsers yet */
        -o-user-select: none;
        user-select: none;
      }

      .link.active {
        background: #428bca !important;
        color: white !important;
      }

      .link.active .fa-external-link {
        color: white !important;
      }

      .delete {
        color: white;
        background: #CA2525;
        float: right;
      }

      .delete:hover {
        color: white;
        background: #9D1515;
      }

      a.btn {
        float: right;
        margin-left: 20px;
      }

      .sorter-container {
        position: absolute;
        top: 40px;
        right: 0px;
      }

      .sorter {
        float: none;
        color: white;
        background: #428bca;
        border-radius: 0px;
        font-size: 14pt;
        padding: 7px;
        border-radius: 0px 4px 4px 0px;
        cursor: pointer;
        position: relative;
        top: 0;
      }

      .sorter.fa-chevron-down {
        border-radius: 4px 0px 0px 4px;
        border-right: 1px solid #3276b1;
      }

      .sorter:hover {
        background: #3276b1;
      }

      [data-id="container"] {
        min-height: 100px;
      }

      .edit-padding {
        padding-right: 350px;
      }

      #controls {
        display: none;
      }

      .dropdown button.dropdown-toggle {
        min-width: 135px;
        text-align: left;
      }

      .dropdown button.dropdown-toggle .dropdown-caret {
        float: right;
      }

      .required::after {
        content: ' *';
        color: red;
      }

      .required-toggle {
        position: absolute;
        top: 45px;
        right: 75px;
        font-size: 14pt;
      }

      .fa-square, .fa-check-square {
        cursor: pointer;
      }

      .dropdown-toggle {
        padding: 7px 14px;
      }

      .bootstrap-switch {
        float: right;
        margin-top: 7px;
      }

      #form-name:not(.edit-border), #form-description:not(.edit-border) {
        border: #E2E2E2;
      }

      .public-toggle, #description-wrapper {
        font-size: 14pt;
      }

      .tooltip {
        text-align: left;
      }

      #form-preview {
        margin-left: 5px;
        font-size: 10pt;
        position: relative;
        top: -15px;
      }
    </style>

    <script src="/js/jquery-2.2.3.min.js"></script>
    <script src="/js/bootstrap-switch.js"></script>
    <script type="text/javascript" src="//static.filestackapi.com/v3/filestack.js"></script>
  </head>
  <body>
    <%- include ../../partials/backend-nav.ejs %>
    <div id='manager' class='manager'>
      <span style='position: absolute; top: 40px; right: 30px;'>
        <button type="button" id="btn-form-delete" class="btn btn-danger" style="display: none">
          Delete Form
        </button>
        <button type="button" id="btn-form-create" class="btn btn-primary">
          Create New Form
        </button>
        <div id="form-select" class="btn-group">
          <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <span class="selected">Select Form...</span> <span class="caret"></span>
          </button>
          <ul class="dropdown-menu dropdown-menu-right">
            <% for(var i=0; i<forms.length; i++) {%>
              <li><a href="#" data-form-id=<%= forms[i].id %>><%= forms[i].name %></a></li>
            <% } %>
          </ul>
        </div>
        <br>
        <input id='edit-switch' type="checkbox" data-on-text='View' data-off-text='Edit' data-on-color='default' data-off-color='primary' checked>
      </span>

      <h1 class="display-4"><span class="edit" id="form-name">Form</span> Manager<a id="form-preview" href="#" target="_blank" style="display: none;">Preview <i class="fas fa-external-link-alt"></i></a></h1>

      <p class="lead">To edit the questions, toggle the switch to edit then save your changes.</p>
      <span id="description-wrapper" style="display: none">Description: <span class="edit" id="form-description"></span></span>
      <br>
      <span class="public-toggle" style="display: none" data-toggle="tooltip" data-placement="bottom" title="If this box is checked, the form will be available to the public. Otherwise, only employees will be able to access it."><i class="far fa-square" data-type="public-toggle" aria-hidden="true"></i> Form available to the public</span>
      <h2>Questions&nbsp;<i class="fa fa-plus-square" aria-hidden="true" data-type='questions'></i></h2>
      <br>
      <div id='question-list' class="list-group">
        <!-- Filled by EJS dump to form_save and then method revert called once document.ready() -->
      </div>

      <div id='controls'>
      <!-- <div id='controls' style='position: absolute; bottom: 30px; right: 30px; display: none;'> -->
        <button id='revert' type="button" class="btn btn-info">Revert Changes</button>
        <button id='save' type="button" class="btn btn-primary">Save Changes</button>
      </div>

    </div>

    <div id="modal_delete" class="modal fade" tabindex="-1" role="dialog">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <form method="POST" enctype="multipart/form-data">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
              <h4 class="modal-title">Are you sure you want to delete "<span id="modal-form-name"></span>"?</h4>
            </div>
            <div class="modal-body">
              All associated questions and responses will also be deleted.
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
              <button id="btn-modal-delete" class="btn btn-danger">Delete</button>
            </div>
          </form>
        </div><!-- /.modal-content -->
      </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->

    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
    <script>
      var all_forms = {
        <% for(var i=0; i<forms.length; i++) {%>
            <%= forms[i].id %>: {
              "id": <%= forms[i].id %>,
              "name": "<%= forms[i].name %>",
              "description": "<%= forms[i].description %>",
              "removable": <%= forms[i].removable %>,
              "public": <%= forms[i].public %>,
              "questions": []
            },
        <% } %>
      };
      <% for(var i=0; i<questions.length; i++) {%>
        all_forms[<%= questions[i].form_id %>]["questions"].push({
          "id": <%= questions[i].id %>,
          "question": "<%= questions[i].question %>",
          "placeholder": "<%= questions[i].placeholder %>",
          "description": "<%= questions[i].description %>",
          "required": <%= questions[i].required %>,
          "options": "<%= questions[i].options %>".split(","),
          "sort_order": <%= questions[i].sort_order %>,
          "is_email": <%= questions[i].is_email %>,
          "is_phone": <%= questions[i].is_phone %>,
          "type_id": "<%= questions[i].type_id %>"
        });
      <% } %>

      var current_form;
      var form_save = [];

      sortSave();

      var form_dels = [];
      var types = [
        <% for(var i=0; i<types.length; i++) {%>
          {
            "id": <%= types[i].id %>,
            "type": "<%= types[i].type %>",
            "hr_type": "<%= types[i].hr_type %>"
          },
        <% } %>
      ];
      var n = 0;

      $(document).ready(function() {
        revert(false);

        $('.public-toggle').tooltip();
        $("#edit-switch").bootstrapSwitch();

        $('#edit-switch').on('switchChange.bootstrapSwitch', function(event, state) {
          if(current_form != undefined) {
            toggleEdit(state);
          }
        });

        $('#save').on('click', function() {
          $('#save').prop('disabled', true);

          all_forms[current_form].name = $.trim($('#form-name').html());
          all_forms[current_form].description = ($("#form-description").find('span').html() != undefined) ? $.trim($("#form-description").find('span').html()) : $.trim($("#form-description").html());
          if(all_forms[current_form].description.toLowerCase() == "none") {
            all_forms[current_form].description = "";
          }
          all_forms[current_form].public = $('[data-type="public-toggle"]').hasClass('fa-check-square');
          $('[data-form-id="' + current_form + '"]').html(all_forms[current_form].name);
          $('#form-select .selected').html(all_forms[current_form].name);
          form_save = getQuestions();
          sortSave();
          save();

          $('#save').prop('disabled', false);
          $("#edit-switch").bootstrapSwitch('state', true);
        });

        $('#revert').on('click', function() {
          revert(true);
        });

        $('#btn-form-create').on('click', function() {
          $.post("/admin/manage/form/create", function(result) {
            all_forms[result.id] = {
              "id": result.id,
              "name": result.name,
              "description": "None",
              "removable": true,
              "public": true,
              "questions": []
            };

            current_form = result.id;
            var selected = $('#form-select').find('.dropdown-toggle');
            $('#form-select').find('.dropdown-menu').append('<li><a href="#" data-form-id=' + result.id + '>' + result.name + '</a></li>');
            revert(false);
          });
        });

        $('#btn-form-delete').on('click', function() {
          $('#modal-form-name').html(all_forms[current_form].name);
          $('#modal_delete').modal('show');
        });

        $('#btn-modal-delete').on('click', function() {
          $.post("/admin/manage/form/delete-form", {'id': current_form}, function(result) {
            location.reload();
          });
        });
      });

      function save() {
        $.post("/admin/manage/form", {"form": all_forms[current_form]}, function(result) {
          console.log(result);
        });
        $.each(form_save, function(i, val) {
          if(val.id.includes("new")) {
            $.post("/admin/manage/form/insert", {"question": val, "form_id": current_form}, function(result) {
              $("[data-question-id='" + val.id + "']").attr("data-question-id", result.id);
              console.log(result);
            });
          } else {
            $.post("/admin/manage/form/update", {"question": val}, function(result) {
              console.log(result);
            });
          }
        });

        if(form_dels.length > 0) {
          $.post("/admin/manage/form/delete", {"questions": form_dels}, function(result) {
            console.log(result);
          });
        }

        all_forms[current_form].questions = form_save;
      }

      function getQuestions() {
        var  questions = [];
        $('[data-id="container"]').each(function() {
          var id = $(this).attr('data-question-id');
          questions.push(getQuestion(id));
        });
        return questions;
      }

      function getQuestion(id) {
        var qdiv = $("[data-question-id='" + id + "']");
        var question = (qdiv.find('[data-id="question"]').find('span').html() != undefined) ? $.trim(qdiv.find('[data-id="question"]').find('span').html()) : $.trim(qdiv.find('[data-id="question"]').html());
        var placeholder = "";
        if (qdiv.find('[data-id="placeholder"]') !== 'undefined') {
          placeholder = (qdiv.find('[data-id="placeholder"]').find('span').html() != undefined) ? $.trim(qdiv.find('[data-id="placeholder"]').find('span').html()) : $.trim(qdiv.find('[data-id="placeholder"]').html());
        }
        var description = "";
        if (qdiv.find('[data-id="description"]') !== 'undefined') {
          description = (qdiv.find('[data-id="description"]').find('span').html() != undefined) ? $.trim(qdiv.find('[data-id="description"]').find('span').html()) : $.trim(qdiv.find('[data-id="description"]').html());
        }
        if (description == "None") {
          description = "";
        }
        var required = qdiv.find('[data-id="question"]').parent().hasClass('required');
        var options = [];
        if (qdiv.find('[data-id="options"]') !== 'undefined') {
          $.each(qdiv.find('[data-id="options"]'), function(i, v) {
            options.push(($(v).find('span').html() != undefined) ? $.trim($(v).find('span').html()).replace('&nbsp;', '') : $.trim($(v).html()).replace('&nbsp;', ''));
          });
        }
        var sort_order = parseInt(qdiv.attr('data-sort-order'), 10);
        var is_email = qdiv.find('[data-id="validator"]').attr('data-is');
        if(is_email == 'email') {
          is_email = true;
        } else {
          is_email = false;
        }
        var is_phone = qdiv.find('[data-id="validator"]').attr('data-is');
        if(is_phone == 'phone') {
          is_phone = true;
        } else {
          is_phone = false;
        }
        var type_id = qdiv.find('[data-id="type_id"]').attr('data-type-id');

        var question = {
          'id':          id,
          "question":    question.replace('&nbsp;', ''),
          "placeholder": placeholder.replace('&nbsp;', ''),
          "description": description.replace('&nbsp;', ''),
          "required":    required,
          "options":     options,
          "sort_order":  sort_order,
          "is_email":    is_email,
          "is_phone":    is_phone,
          "type_id":     type_id
        };
        return question;
      }

      function newQuestion(id, question, description, placeholder, options, type_id, required = false, is_email = false, is_phone = false) {
        type_id = parseInt(type_id, 10);
        var t;
        var text_type;
        for (var i = 0; i < types.length; i++) {
          if (type_id === types[i].id) {
            t = types[i];
          }
          if (types[i].type === "text") {
            text_type = types[i];
          }
        }
        if (typeof t === typeof undefined) {
          return newQuestionText(id, question, description, placeholder, text_type.id, required, is_email, is_phone);
        } else if (t.type === "textarea") {
          return newQuestionTextarea(id, question, description, type_id, required);
        } else if (t.type === "checkbox") {
          return newQuestionCheckbox(id, question, description, options, type_id, required);
        } else if (t.type === "radio") {
          return newQuestionRadio(id, question, description, options, type_id, required);
        } else {
          return newQuestionText(id, question, description, placeholder, text_type.id, required, is_email, is_phone);
        }
      }

      function newQuestionTextarea(id, question, description, type_id, required = false) {
        var d = "None";
        if(description != "") {
          d = description;
        }
        var r = (required) ? " required" : "";
        return '<li class="list-group-item list-group-item-action flex-column align-items-start" data-id="container" data-question-id=' + id + '>'
            + getTypes(type_id, required)
            + '<div class="d-flex w-100 justify-content-between">'
              + '<h3 class="mb-1' + r + '"><span class="edit" data-id="question">' + question + '</span></h3>'
              + '<p class="mb-1" style="padding-left:18px;">'
                + 'Description: <span class="edit" data-id="description">' + d + '</span>'
              + '</p>'
            + '</div>'
          + '</li>';
      }

      function newQuestionCheckbox(id, question, description, options, type_id, required = false) {
        var d = "None";
        if(description != "") {
          d = description;
        }
        var options_html = "";
        $.each(options, function(i, v) {
          options_html += '<p class="mb-1" style="padding-left:18px;">'
                          + '<span class="edit" data-id="options">' + v + '</span><i class="far fa-trash-alt large option" aria-hidden="true"></i>'
                        + '</p>';
        });
        var r = (required) ? " required" : "";
        return '<li class="list-group-item list-group-item-action flex-column align-items-start" data-id="container" data-question-id=' + id + '>'
            + getTypes(type_id, required)
            + '<div class="d-flex w-100 justify-content-between">'
              + '<h3 class="mb-1' + r + '"><span class="edit" data-id="question">' + question + '</span></h3>'
            + '</div>'
            + '<p class="mb-1" style="padding-left:18px;">'
              + 'Description: <span class="edit" data-id="description">' + d + '</span>'
            + '</p>'
            + '<div class="options">'
              + '<h3>Options <i class="fa fa-plus-square" aria-hidden="true" data-type="option"></i></h3>'
              + options_html
            + '</div>'
          + '</li>';
      }

      function newQuestionRadio(id, question, description, options, type_id, required = false) {
        var d = "None";
        if(description != "") {
          d = description;
        }
        var options_html = "";
        $.each(options, function(i, v) {
          options_html += '<p class="mb-1" style="padding-left:18px;">'
                          + '<span class="edit" data-id="options">' + v + '</span><i class="far fa-trash-alt large option" aria-hidden="true"></i>'
                        + '</p>';
        });
        var r = (required) ? " required" : "";
        return '<li class="list-group-item list-group-item-action flex-column align-items-start" data-id="container" data-question-id=' + id + '>'
            + getTypes(type_id, required)
            + '<div class="d-flex w-100 justify-content-between">'
              + '<h3 class="mb-1' + r + '"><span class="edit" data-id="question">' + question + '</span></h3>'
            + '</div>'
            + '<p class="mb-1" style="padding-left:18px;">'
              + 'Description: <span class="edit" data-id="description">' + d + '</span>'
            + '</p>'
            + '<div class="options">'
              + '<h3>Options <i class="fa fa-plus-square" aria-hidden="true" data-type="option"></i></h3>'
              + options_html
            + '</div>'
          + '</li>';
      }

      function newQuestionText(id, question, description, placeholder, type_id, required = false, is_email = false, is_phone = false) {
        var d = "None";
        if(description != "") {
          d = description;
        }
        var r = (required) ? " required" : "";
        return '<li class="list-group-item list-group-item-action flex-column align-items-start" data-id="container" data-question-id=' + id + '>'
            + getTextTypes(type_id, required, is_email, is_phone)
            + '<div class="d-flex w-100 justify-content-between">'
              + '<h3 class="mb-1' + r + '"><span class="edit" data-id="question">' + question + '</span></h3>'
            + '</div>'
            + '<p class="mb-1" style="padding-left:18px;">'
              + 'Description: <span class="edit" data-id="description">' + d + '</span>'
            + '</p>'
            + '<p class="mb-1" style="padding-left:18px;">'
              + 'Placeholder: <span class="edit" data-id="placeholder">' + placeholder + '</span>'
            + '</p>'
          + '</li>';
      }

      function newOption(option) {
        return '<p class="mb-1" style="padding-left:18px;">'
                  + '<span class="edit" data-id="options">' + option + '</span><i class="far fa-trash-alt large option" aria-hidden="true"></i>'
                + '</p>';
      }

      function getTypes(type_id, required) {
        var t = -1;
        for (var i = 0; i < types.length; i++) {
          if (type_id === types[i].id) {
            t = types[i];
          }
        }
        var c = 'fa-square';
        if(required) {
          c = 'fa-check-square';
        }
        ret = '<span class="right-corner">'
          + '<i class="far fa-trash-alt large question" aria-hidden="true"></i>'
            + '<div class="dropdown">'
                  + '<button class="btn btn-default dropdown-toggle" data-id="type_id" data-type-id=' + t.id + ' type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">'
                    + '<span class="dropdown-title">' + t.hr_type + '</span>'
                    + '<span class="dropdown-caret">&nbsp;<span class="caret"></span></span>'
                  + '</button>'
                  + '<ul class="dropdown-menu dropdown-menu-right">';
        for(var i = 0; i < types.length; i++) {
          ret += '<li><a href="#" data-type-id=' + types[i].id + ' title="' + types[i].hr_type + '">' + types[i].hr_type + '</a></li>';
        }
        ret += '</ul>'
            + '</div>'
          + '<br>'
          + '<span class="required-toggle">Required: <i class="far ' + c + '" aria-hidden="true"></i></span><span class="sorter-container"><i class="fa fa-chevron-down sorter" aria-hidden="true"></i><i class="fa fa-chevron-up sorter" aria-hidden="true"></i></span>'
        + '</span>';

        return ret;
      }

      function getTextTypes(type_id, required, is_email, is_phone) {
        var validator = "Select validator";
        if(is_email) {
          validator = "Email";
        } else if (is_phone) {
          validator = "Phone";
        }
        var t = -1;
        for (var i = 0; i < types.length; i++) {
          if (type_id === types[i].id) {
            t = types[i];
          }
        }
        var c = 'fa-square';
        if(required) {
          c = 'fa-check-square';
        }
        ret = '<span class="right-corner">'
          + '<i class="far fa-trash-alt large question" aria-hidden="true"></i>'
            + '<div class="dropdown">'
                  + '<button class="btn btn-default dropdown-toggle" data-id="type_id" data-type-id=' + t.id + ' type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">'
                    + '<span class="dropdown-title">' + t.hr_type + '</span>'
                    + '<span class="dropdown-caret">&nbsp;<span class="caret"></span></span>'
                  + '</button>'
                  + '<ul class="dropdown-menu dropdown-menu-right">';
        for(var i = 0; i < types.length; i++) {
          ret += '<li><a href="#" data-type-id=' + types[i].id + ' title="' + types[i].hr_type + '">' + types[i].hr_type + '</a></li>';
        }
        ret += '</ul>'
            + '</div>'
            + '<div class="dropdown">'
              + '<button class="btn btn-default dropdown-toggle" data-id="validator" data-is=' + validator.toLowerCase() + ' type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">'
                + '<span class="dropdown-title">' + validator + '</span>'
                + '<span class="dropdown-caret">&nbsp;<span class="caret"></span></span>'
              + '</button>'
              + '<ul class="dropdown-menu dropdown-menu-right">'
                + '<li><a href="#">None</a></li>'
                + '<li><a href="#">Email</a></li>'
                + '<li><a href="#">Phone</a></li>'
              + '</ul>'
            + '</div>'
          + '<br>'
          + '<span class="required-toggle">Required: <i class="far ' + c + '" aria-hidden="true"></i></span><span class="sorter-container"><i class="fa fa-chevron-down sorter" aria-hidden="true"></i><i class="fa fa-chevron-up sorter" aria-hidden="true"></i></span>'
        + '</span>';

        return ret;
      }

      function toggleEdit(state) {
        if(!state) {
          setClicks();
          $('.public-toggle').show();
          $('.edit').attr('contenteditable', true);
          $('.edit').addClass('edit-border');
          $('.right-corner').attr('contenteditable', false);
          $('.fa-plus-square').attr('contenteditable', false);
          $('#controls').fadeIn();
          $('.fa-plus-square').fadeIn();
          $('#manager .right-corner').fadeIn();
          $('.fa-trash-alt').fadeIn();
          $('#browse').fadeOut();
          $('#delete-multiple').fadeOut();
          $('#ready i').fadeOut();
          $('#disabled i').fadeIn();
          $("[data-id='container']").addClass('edit-padding');
        } else {
          revert(false);
          $('.public-toggle').hide();
          $('.edit').attr('contenteditable', false);
          $('.edit').removeClass('edit-border');
          $('.right-corner').attr('contenteditable', false);
          $('#controls').fadeOut();
          $('.fa-plus-square').fadeOut();
          $('#manager .right-corner').fadeOut();
          $('.fa-trash-alt').fadeOut();
          $('#browse').fadeIn();
          $('#delete-multiple').fadeIn();
          $('#ready i').fadeIn();
          $('#disabled i').fadeOut();
          $("[data-id='container']").removeClass('edit-padding');
        }
      }

      function setClicks() {
        $('.fa-plus-square').off('click');
        $('.fa-plus-square').on('click', function() {
          if($(this).attr('data-type') === "questions") {
            $('#question-list').append(newQuestion('new' + n, 'What is your question?', 'None', 'Answer here', [], 1,));
            n++;
          } else {
            $(this).closest("div.options").append(newOption("New Option"));
          }
          toggleEdit(false);
        });

        $('.dropdown li a').off('click');
        $('.dropdown li a').on('click', function(e) {
          var selected = $(this).closest('.dropdown').find('.dropdown-toggle');
          if($(this).attr("title")) {
            selected.find('.dropdown-title').html($(this).attr("title"));
            var type_id = $(this).attr("data-type-id");
            selected.attr('data-type-id', type_id);
            var id = $(this).closest('[data-id="container"]').attr('data-question-id');
            var question = getQuestion(id);
            var new_question = newQuestion(question.id, question.question, question.description, question.placeholder, question.options, question.type_id, question.required, question.is_email, question.is_phone);
            $("[data-question-id='" + id + "']").replaceWith(new_question);
          } else {
            var validator = $(this).html();
            selected.find('.dropdown-title').html(validator);
            selected.attr('data-is', validator.toLowerCase());
          }
          setClicks();
          toggleEdit(false);
          e.preventDefault();
        });

        $('.btn-group li a').off('click');
        $('.btn-group li a').on('click', function(e) {
          current_form = $(this).data('form-id');
          var selected = $(this).closest('.btn-group').find('.dropdown-toggle');
          revert(false);
          e.preventDefault();
        });

        $('.fa-trash-alt.question').off('click');
        $('.fa-trash-alt.question').on('click', function() {
          var parent = $(this).closest('[data-id="container"]');
          var fattr = parent.attr('data-question-id');

          if (typeof fattr !== typeof undefined && fattr !== false && !fattr.includes("new")) {
            form_dels.push(fattr);
          }
          parent.remove();
        });

        $('.fa-trash-alt.option').off('click');
        $('.fa-trash-alt.option').on('click', function() {
          var parent = $(this).closest('p').remove();
        });

        $('[data-id="question"], [data-id="placeholder"]').off('keypress')
        $('[data-id="question"], [data-id="placeholder"]').on('keypress', function(e) {
          var key = e.which;
          if(key == 13) {
            e.preventDefault();
            e.stopPropagation();
            $('#question-list').append(newQuestion('new' + n, 'What is your question?', 'None', 'Answer here', [], 1));
            n++;
            toggleEdit(false);
          }
        });

        $('[data-id="question"], [data-id="description"]').off('keypress')
        $('[data-id="question"], [data-id="description"]').on('keypress', function(e) {
          var key = e.which;
          if(key == 13) {
            e.preventDefault();
            e.stopPropagation();
            $('#question-list').append(newQuestion('new' + n, 'What is your question?', 'None', 'Answer here', [], 1));
            n++;
            toggleEdit(false);
          }
        });

        $('[data-id="options"]').off('keypress')
        $('[data-id="options"]').on('keypress', function(e) {
          var key = e.which;
          if(key == 13) {
            e.preventDefault();
            e.stopPropagation();
            $(this).closest('div.options').append(
              newOption("New Option")
            );
            toggleEdit(false);
          }
        });

        $('.sorter.fa-chevron-down').off('click');
        $('.sorter.fa-chevron-down').on('click', function() {
          var parent = $(this).closest('[data-id="container"]');
          parent.insertAfter(parent.next());
          setClicks();
        });

        $('.sorter.fa-chevron-up').off('click');
        $('.sorter.fa-chevron-up').on('click', function() {
          var parent = $(this).closest('[data-id="container"]');
          parent.insertBefore(parent.prev());
          setClicks();
        });

        $('.fa-square').off('click');
        $('.fa-square').on('click', function() {
          if($(this).data("type") == "public-toggle") {
            all_forms[current_form].public = true;
          } else {
            var parent = $(this).closest('[data-id="container"]').find('[data-id="question"]').parent();
            parent.addClass('required');
          }
          $(this).removeClass('fa-square');
          $(this).addClass('fa-check-square');
          setClicks();
        });

        $('.fa-check-square').off('click');
        $('.fa-check-square').on('click', function() {
          if($(this).data("type") == "public-toggle") {
            all_forms[current_form].public = false;
          } else {
            var parent = $(this).closest('[data-id="container"]').find('[data-id="question"]').parent();
            parent.removeClass('required');
          }
          $(this).removeClass('fa-check-square');
          $(this).addClass('fa-square');
          setClicks();
        });

        setSortOrder();
      }

      function revert(toggle) {
        if(current_form != undefined) {
          $('#description-wrapper').show();
          if(all_forms[current_form].description) {
            $('#form-description').html(all_forms[current_form].description);
          } else {
            $('#form-description').html("None");
          }
          if(all_forms[current_form].removable) {
            $("#btn-form-delete").show();
          } else {
            $("#btn-form-delete").hide();
          }
          if(all_forms[current_form].public) {
            $("#form-preview").attr('href', '/form?formid=' + all_forms[current_form].id);
            $('[data-type="public-toggle"]').removeClass('fa-square');
            $('[data-type="public-toggle"]').addClass('fa-check-square');
          } else {
            $("#form-preview").attr('href', '/employee/form?formid=' + all_forms[current_form].id);
            $('[data-type="public-toggle"]').removeClass('fa-check-square');
            $('[data-type="public-toggle"]').addClass('fa-square');
          }
          $("#form-preview").show();
          form_save = all_forms[current_form].questions;
          $('#form-select .selected').html(all_forms[current_form].name);
          $("#form-name").html(all_forms[current_form].name);
        }

        $('#question-list').html('');

        $.each(form_save, function(i, value) {
          $('#question-list').append(newQuestion(value.id, value.question, value.description, value.placeholder, value.options, value.type_id, value.required, value.is_email, value.is_phone));
        });

        setClicks();
        if(toggle) {
          toggleEdit(false);
        }
      }

      function setSortOrder() {
        $.each($("#question-list [data-id='container']"), function(i, v) {
          $(v).attr("data-sort-order", i);
        });
      }

      function sortSave() {
        Reflect.ownKeys(all_forms).forEach(key => {
          all_forms[key].questions = all_forms[key].questions.sort(function (a, b) {
            return a.sort_order - b.sort_order;
          });
        });
      }

      // function loadForm(selected) {
      //   if(all_forms[current_form].description) {
      //     $('#form-description').html(all_forms[current_form].description);
      //   } else {
      //     $('#form-description').html("None");
      //   }
      //   if(all_forms[current_form].removable) {
      //     $("#btn-form-delete").show();
      //   } else {
      //     $("#btn-form-delete").hide();
      //   }
      //   if(all_forms[current_form].public) {
      //     $("#form-preview").attr('href', '/form?formid=' + all_forms[current_form].id);
      //     $('[data-type="public-toggle"]').removeClass('fa-square');
      //     $('[data-type="public-toggle"]').addClass('fa-check-square');
      //   } else {
      //     $("#form-preview").attr('href', '/employee/form?formid=' + all_forms[current_form].id);
      //     $('[data-type="public-toggle"]').removeClass('fa-check-square');
      //     $('[data-type="public-toggle"]').addClass('fa-square');
      //   }
      //   $("#form-preview").show();
      //   form_save = all_forms[current_form].questions;
      //   selected.find('.selected').html(all_forms[current_form].name);
      //   $("#form-name").html(all_forms[current_form].name);
      //   revert(false);
      // }
    </script>
  </body>
</html>
