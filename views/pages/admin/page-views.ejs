<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Admin Portal | From</title>

    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/backend/backend.css">
    <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="//cdn.datatables.net/v/bs/jq-2.2.4/dt-1.10.15/r-2.1.1/datatables.min.css"/>
    <style>
      .fa-trash-alt, .fa-plus-square, .fa-external-link, .fa-chart-area, .fa-archive, .fa-window-restore {
        cursor: pointer;
      }

      #manager .fa-plus-square, #manager .right-corner {
        display: none;
      }

      .fa-trash-alt, .fa-chart-area, .fa-archive, .fa-window-restore {
        border-radius: 3px;
        font-size: 12pt;
      }

      .fa-window-restore {
        padding: 7px 7px;
        color: #FBEEE4;
        background: #F27107;
      }

      .fa-window-restore:hover {
        background: #C96716;
      }

      .fa-chart-area {
        padding: 7px 6px;
        color: #DFEBF5;
        background: #428bca;
      }

      .fa-chart-area:hover {
        background: #3276b1
      }

      .fa-archive {
        padding: 7px 7px;
        color: #F8ECDD;
        background: #FFA228;
      }

      .fa-archive:hover {
        background: #DA8210
      }

      .fa-trash-alt {
        padding: 7px 8px;
        background: #CA2525;
        color: #F4DBDB;
      }

      .fa-trash-alt:hover {
        background: #9D1515;
      }

      .fa-external-link {
        color: #428bca;
        padding-left: 25px;
      }

      .fa-external-link:hover {
        color: #3276b1;
      }

      .right-corner {
        position: absolute;
        top: 15px;
        right: 15px;
      }

      .fa-trash-alt.large {
        padding: 5px 8px;
        font-size: 16pt;
        float: right;
        display: none;
      }

      .edit {
        -webkit-transition: border-color 1s; /* Safari */
        transition: border-color 1s;
        border: 1px solid #FFF;
      }

      .edit-border {
        border-color: #428bca !important;
      }

      hr.middle-fade {
        border: 0;
        height: 1px;
        background: #999;
        background-image: linear-gradient(to right, #ccc, #999, #ccc);
      }

      #dropzone {
        position: relative;
        height: 27vw;
        background: white;
        border: 1px solid #ddd;
        border-radius: 4px;
      }

      #dropzone .dz-preview {
        visibility: hidden;
        display: none;
      }

      #dropzone .dz-message {
        font-size: 4vw;
        padding-top: 15vw;
        text-align: center;

        background-color: #AAA;
        opacity: 0.6;
        color: transparent;
        text-shadow: 0px 2px 3px rgba(255,255,255,0.5);
        -webkit-background-clip: text;
            -moz-background-clip: text;
                 background-clip: text;

       -webkit-transition: background-color 0.6s; /* Safari */
       transition: background-color 0.6s;
      }

      #dropzone.dz-drag-hover .dz-message {
        background-color: #777 !important;
      }

      #dropzone::before {
        padding-top: 2vw;
        margin: auto;
        text-align: center;
        font-size: 9vw;
        position: absolute;
        z-index: 10;
        top: 15px;
        left: 15px;
        right: 15px;
        bottom: 15px;
        border-radius: 4px;
        border: 8px dashed #CCC;
        content: " ";
        opacity: 0.6;
        -webkit-transition: background-color 0.6s, border-color 0.6s; /* Safari */
        transition: background-color 0.6s, border-color 0.6s;
      }

      #dropzone.dz-drag-hover::before {
        border-color: #AAA !important;
      }

      #dropzone .icon {
        font-size: 10vw;
        padding-top: 2vw;
        text-align: center;
        position: absolute;
        z-index: 10;
        top: 15px;
        left: 15px;
        right: 15px;
        bottom: 15px;
      }

      #dropzone .icon i {
        background-color: #AAA;
        opacity: 0.6;
        color: transparent;
        text-shadow: 0px 2px 3px rgba(255,255,255,0.5);
        -webkit-background-clip: text;
        -moz-background-clip: text;
        background-clip: text;

        -webkit-transition: display 1s, background-color 0.6s; /* Safari */
        transition: display 1s, background-color 0.6s;
      }

      #dropzone.dz-drag-hover .icon i {
        background-color: #777 !important;
      }

      #dropzone #disabled {
        font-size: 7vw !important;
        padding-top: 1.5vw !important;
      }

      #dropzone #disabled i, #dropzone #loader i {
        display: none;
      }

      #dropzone.dropped #ready i {
        display: none !important;
      }

      .jumbotron {
        position: relative;
        width: 75%;
        margin: 15px auto;
        padding-bottom: 90px;
        border-radius: 4px;
      }

      .dropdown {
        font-size: 14pt;
        float: right;
        margin-right: 10px;
        height: 30.8px;
      }

      .dropdown button.dropdown-toggle {
        padding: 4.4px 12px;
      }

      .fa-chevron-down {
        position: relative;
        top: -4px;
        float: right;
        padding: 5px;
        border-radius: 0px 4px 4px 0px;
        background: #428bca;
        color: white;
      }

      .open {
        border-bottom-left-radius: 0px !important;
      }

      .link {
        cursor: pointer;
        -webkit-user-select: none; /* Chrome/Safari */
        -moz-user-select: none; /* Firefox */
        -ms-user-select: none; /* IE10+ */

        /* Rules below not implemented in browsers yet */
        -o-user-select: none;
        user-select: none;
      }

      .link.active {
        background: #428bca !important;
        color: white !important;
      }

      .link.active .fa-external-link {
        color: white !important;
      }

      .delete {
        color: white;
        background: #CA2525;
        float: right;
      }

      .delete:hover {
        color: white;
        background: #9D1515;
      }

      a.btn {
        float: right;
        margin-left: 20px;
      }

      .sorter-container {
        position: absolute;
        top: 40px;
        right: 0px;
      }

      .sorter {
        float: none;
        color: white;
        background: #428bca;
        border-radius: 0px;
        font-size: 14pt;
        padding: 7px;
        border-radius: 0px 4px 4px 0px;
        cursor: pointer;
        position: relative;
        top: 0;
      }

      .sorter.fa-chevron-down {
        border-radius: 4px 0px 0px 4px;
        border-right: 1px solid #3276b1;
      }

      .sorter:hover {
        background: #3276b1;
      }

      [data-id="container"] {
        min-height: 100px;
      }

      .edit-padding {
        padding-right: 350px;
      }

      #controls {
        display: none;
      }

      .dropdown button.dropdown-toggle {
        min-width: 135px;
        text-align: left;
      }

      .dropdown button.dropdown-toggle .dropdown-caret {
        float: right;
      }

      .required::after {
        content: ' *';
        color: red;
      }

      .required-toggle {
        position: absolute;
        top: 45px;
        right: 75px;
        font-size: 14pt;
      }

      .fa-square, .fa-check-square {
        cursor: pointer;
      }

      .dropdown-toggle {
        padding: 7px 14px;
      }

      .bootstrap-switch {
        float: right;
        margin-top: 7px;
      }

      #form-name:not(.edit-border), #form-description:not(.edit-border) {
        border: #E2E2E2;
      }

      .public-toggle, #description-wrapper {
        font-size: 14pt;
      }

      .tooltip {
        text-align: left;
      }

      #form-preview {
        margin-left: 5px;
        font-size: 10pt;
        position: relative;
        top: -15px;
      }

      .view-table {
        background: white;
        border-radius: 5px;
        width: 100% !important;
      }

      .button-columns {
        text-align: center;
      }

      .center-body {
        text-align: center;
      }

      .fa-circle-notch {
        font-size: 18pt;
        color: #bbb;
      }

      .response {
        background: #F7F7F7;
        padding: 7px 9px;
        width: 100%;
        margin: 8px 0;
        border-radius: 6px;
      }

      .response-question {
        color: #111;
        font-size: 14pt;
      }

      .response-answer {
        color: #444;
        font-size: 13pt;
      }

      #form-select {
        margin-top: 8px;
      }
    </style>

    <script src="/js/jquery-2.2.3.min.js"></script>
    <script type="text/javascript" src="//cdn.datatables.net/v/bs/jq-2.2.4/dt-1.10.15/r-2.1.1/datatables.min.js"></script>
  </head>
  <body>
    <%- include ../../partials/backend-nav.ejs %>
    <div id='manager' class='manager'>
      <h1 class="display-4">Page Views</h1>

      <br>
      <div class="row">
        <div class="col-md-11">
          <div id="table-wrapper" class="content">
            <table id="page-view-table" class="view-table table table-striped table-bordered">
              <thead>
                <tr>
                  <th>Page</th>
                  <th>Today</th>
                  <th>Last 7 Days</th>
                  <th>Last 30 Days</th>
                  <th>Graph</th>
                </tr>
              </thead>
              <tfoot>
                <tr>
                  <th>Page</th>
                  <th>Today</th>
                  <th>Last 7 Days</th>
                  <th>Last 30 Days</th>
                  <th>Graph</th>
                </tr>
              </tfoot>
            </table>
          </div>
        </div>
      </div>

      <div id="modal_view" class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
              <h4 class="modal-title"></h4>
            </div>
            <div class="modal-body"></div>
            <div class="modal-footer">
              <div class="btn-group pull-left" data-toggle="buttons">
                <label id="select-day" class="btn btn-primary active">
                  <input type="radio" name="options" autocomplete="off" checked> Last Week
                </label>
                <label id="select-month" class="btn btn-primary">
                  <input type="radio" name="options" autocomplete="off"> Last Month
                </label>
                <label id="select-year" class="btn btn-primary">
                  <input type="radio" name="options" autocomplete="off"> Last Year
                </label>
              </div>
              <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
          </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
      </div><!-- /.modal -->
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script>
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
    <script>

      var pages = {
        <% for(var i=0; i<pages.length; i++) { %>
          "<%= pages[i].route %>": {
            "id": <%= pages[i].id %>,
            "name": "<%= pages[i].name %>",
            "route": "<%= pages[i].route %>",
            "views": <%- JSON.stringify(views[pages[i].route]) %>
          },
        <% } %>
      };

      var weekday = new Array(7);
      weekday[0] = "Sunday";
      weekday[1] = "Monday";
      weekday[2] = "Tuesday";
      weekday[3] = "Wednesday";
      weekday[4] = "Thursday";
      weekday[5] = "Friday";
      weekday[6] = "Saturday";

      var month = new Array(12);
      month[0] = "January";
      month[1] = "February";
      month[2] = "March";
      month[3] = "April";
      month[4] = "May";
      month[5] = "June";
      month[6] = "July";
      month[7] = "August";
      month[8] = "September";
      month[9] = "October";
      month[10] = "November";
      month[11] = "December";

      $(document).ready(function() {
        $('#page-view-table').DataTable( {
          data: Object.values(pages),
          columns: [
            { data: 'name' },
            {
              data: 'today',
              render: function(data, type, row) {
                var dt = new Date();
                if(row.views[dt.getFullYear()] && row.views[dt.getFullYear()][dt.getMonth()] && row.views[dt.getFullYear()][dt.getMonth()][dt.getDate()-1]) {
                  return row.views[dt.getFullYear()][dt.getMonth()][dt.getDate()-1];
                } else {
                  return 0;
                }
              }
            },
            {
              data: 'last-seven',
              render: function(data, type, row) {
                var dt = new Date();
                var total = 0;
                for(var i = 0; i < 7; i++) {
                  if(row.views[dt.getFullYear()] && row.views[dt.getFullYear()][dt.getMonth()] && row.views[dt.getFullYear()][dt.getMonth()][dt.getDate()-1]) {
                    total += row.views[dt.getFullYear()][dt.getMonth()][dt.getDate()-1];
                  }
                  dt.setDate(dt.getDate()-1);
                }
                return total;
              }
            },
            {
              data: 'last-thirty',
              render: function(data, type, row) {
                var dt = new Date();
                var total = 0;
                for(var i = 0; i < 30; i++) {
                  if(row.views[dt.getFullYear()] && row.views[dt.getFullYear()][dt.getMonth()] && row.views[dt.getFullYear()][dt.getMonth()][dt.getDate()-1]) {
                    total += row.views[dt.getFullYear()][dt.getMonth()][dt.getDate()-1];
                  }
                  dt.setDate(dt.getDate()-1);
                }
                return total;
              }
            },
            {
              data: 'view',
              className: "button-columns",
              orderable: false,
              searchable: false,
              defaultContent: '',
              width: '25px',
              render: function(data, type, row) {
                return '<i class="fas fa-chart-area" data-route="' + row.route + '"></i>';
              }
            }
          ]
        });

        setClicks();
      });

      function setClicks() {
        $('.fa-chart-area').off('click');
        $('.fa-chart-area').on('click', function() {
          $('#modal_view .modal-title').html(pages[$(this).data('route')].name);
          $('#modal_view').modal('show');
          $('#modal_view .modal-body').html('');
          drawCharts($(this).data('route'));
        });

        $('#select-day').on('click', function() {
          $('#chart-days').show();
          $('#chart-month').hide();
          $('#chart-year').hide();
        });

        $('#select-month').on('click', function() {
          $('#chart-month').show();
          $('#chart-days').hide();
          $('#chart-year').hide();
        });

        $('#select-year').on('click', function() {
          $('#chart-year').show();
          $('#chart-days').hide();
          $('#chart-month').hide();
        });
      }

      function drawCharts(route) {
        drawChartDays(route);
        drawChartMonth(route);
        drawChartYear(route);
      }

      function drawChartDays(route) {
        $('#modal_view .modal-body').append('<canvas id="chart-days"></canvas>');
        var data = [[], []];

        var dt = new Date();
        dt.setDate(dt.getDate()-6);
        for(var i = 0; i < 7; i++) {
          if(pages[route].views[dt.getFullYear()] && pages[route].views[dt.getFullYear()][dt.getMonth()] && pages[route].views[dt.getFullYear()][dt.getMonth()][dt.getDate()-1]) {
            data[0].push(weekday[dt.getDay()]);
            data[1].push(pages[route].views[dt.getFullYear()][dt.getMonth()][dt.getDate()-1]);
          } else {
            data[0].push(weekday[dt.getDay()]);
            data[1].push(0);
          }
          dt.setDate(dt.getDate()+1);
        }

        var e = document.getElementById('chart-days')
        var ctx = e.getContext('2d');
        var chart = new Chart(ctx, {
          type: 'line',
          data: {
            labels: data[0],
            datasets: [{
              backgroundColor: 'rgb(24, 43, 93)',
              borderColor: 'rgb(24, 43, 93)',
              data: data[1],
              label: 'Page Views'
            }]
          },
          options: {
            legend: {
              display: false
            },
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true,
                        callback: function (value) { if (Number.isInteger(value)) { return value; } },
                        stepSize: 1
                    }
                }]
            }
          }
        });
      }

      function drawChartMonth(route) {
        $('#modal_view .modal-body').append('<canvas id="chart-month" style="display: none"></canvas>');
        var data = [[], []];

        var dt = new Date();
        dt.setDate(dt.getDate()-29);
        for(var i = 0; i < 30; i++) {
          if(pages[route].views[dt.getFullYear()] && pages[route].views[dt.getFullYear()][dt.getMonth()] && pages[route].views[dt.getFullYear()][dt.getMonth()][dt.getDate()-1]) {
            data[0].push(dt.getDate());
            data[1].push(pages[route].views[dt.getFullYear()][dt.getMonth()][dt.getDate()-1]);
          } else {
            data[0].push(dt.getDate());
            data[1].push(0);
          }
          dt.setDate(dt.getDate()+1);
        }

        var e = document.getElementById('chart-month')
        var ctx = e.getContext('2d');
        var chart = new Chart(ctx, {
          type: 'line',
          data: {
            labels: data[0],
            datasets: [{
              backgroundColor: 'rgb(24, 43, 93)',
              borderColor: 'rgb(24, 43, 93)',
              data: data[1],
              label: 'Page Views'
            }]
          },
          options: {
            legend: {
              display: false
            },
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true,
                        callback: function (value) { if (Number.isInteger(value)) { return value; } },
                        stepSize: 1
                    }
                }]
            }
          }
        });
      }

      function drawChartYear(route) {
        $('#modal_view .modal-body').append('<canvas id="chart-year" style="display: none"></canvas>');
        var data = [[], []];

        var dt = new Date();
        var this_month = dt.getMonth();
        do {
          var total = 0;
          data[0].unshift(month[dt.getMonth()]);
          while(dt.getDate() > 1) {
            if(pages[route].views[dt.getFullYear()] && pages[route].views[dt.getFullYear()][dt.getMonth()] && pages[route].views[dt.getFullYear()][dt.getMonth()][dt.getDate()-1]) {
              total += pages[route].views[dt.getFullYear()][dt.getMonth()][dt.getDate()-1];
            }
            dt.setDate(dt.getDate()-1);
          }
          if(pages[route].views[dt.getFullYear()] && pages[route].views[dt.getFullYear()][dt.getMonth()] && pages[route].views[dt.getFullYear()][dt.getMonth()][dt.getDate()-1]) {
            total += pages[route].views[dt.getFullYear()][dt.getMonth()][dt.getDate()-1];
          }
          dt.setDate(dt.getDate()-1);
          data[1].unshift(total);
        } while (dt.getMonth() != this_month);

        var e = document.getElementById('chart-year')
        var ctx = e.getContext('2d');
        var chart = new Chart(ctx, {
          type: 'line',
          data: {
            labels: data[0],
            datasets: [{
              backgroundColor: 'rgb(24, 43, 93)',
              borderColor: 'rgb(24, 43, 93)',
              data: data[1],
              label: 'Page Views'
            }]
          },
          options: {
            legend: {
              display: false
            },
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true,
                        callback: function (value) { if (Number.isInteger(value)) { return value; } },
                        stepSize: 1
                    }
                }]
            }
          }
        });
      }
    </script>
  </body>
</html>
